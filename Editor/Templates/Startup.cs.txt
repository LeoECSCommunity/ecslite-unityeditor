using Leopotam.EcsLite;
using UnityEngine;

namespace #NS# {
    sealed class #SCRIPTNAME# : MonoBehaviour {
        EcsWorld _world;
        EcsSystems _systems;

        void Start () {        
            _world = new EcsWorld ();
            // register your shared data here, for example:
            // var shared = new Shared ();
            // systems = new EcsSystems (world, shared);
            _systems = new EcsSystems (_world);
#if UNITY_EDITOR
            Leopotam.EcsLite.UnityEditor.EcsWorldObserver.Create (_world);
#endif
            _systems
                // register your systems here, for example:
                // .Add (new TestSystem1 ())
                // .Add (new TestSystem2 ())
                
                // register additional worlds here, for example:
                // .AddWorld (new EcsWorld (), "events")
                
                // register "delete-here" helpers here
                // for components cleanup (order is important), for example:
                // .DelHere<TestComponent1> ()
                // .DelHere<TestComponent2> ()
                
                .Init ();
        }

        void Update () {
            _systems?.Run ();
        }

        void OnDestroy () {
            if (_systems != null) {
                _systems.Destroy ();
                _systems = null;
            }
            if (_world != null) {
                _world.Destroy ();
                _world = null;
            }
        }
    }
}